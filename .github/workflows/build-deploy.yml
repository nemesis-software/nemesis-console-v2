# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    env:
      NEMESIS_REPOSITORY_HTTP_USERNAME: ${{ secrets.NEMESIS_REPOSITORY_HTTP_USERNAME }}
      NEMESIS_REPOSITORY_HTTP_PASSWORD: ${{ secrets.NEMESIS_REPOSITORY_HTTP_PASSWORD }}
      NEMESIS_DOCKER_HTTP_PASSWORD: ${{ secrets.NEMESIS_DOCKER_HTTP_PASSWORD }}
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Add SSH key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p /home/runner/.ssh
          ssh-keyscan -t rsa 178.128.241.213 >> /home/runner/.ssh/known_hosts
      - name: Build Layered Jar with Maven
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: mvn clean install docker:build docker:push -s src/main/resources/settings.xml -U -Pprod
